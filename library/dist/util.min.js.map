{"version":3,"sources":["webpack://util/webpack/universalModuleDefinition","webpack://util/webpack/bootstrap","webpack://util/webpack/runtime/define property getters","webpack://util/webpack/runtime/hasOwnProperty shorthand","webpack://util/webpack/runtime/make namespace object","webpack://util/./library/index.js"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","formatTime","date","format","result","Date","Error","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","map","formatNumber","replace","match","n"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,IARjB,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1B,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBd,IACH,oBAAXkB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeV,EAASkB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeV,EAAS,aAAc,CAAEoB,OAAO,M,yDCGhD,MAAMC,EAAa,CAACC,EAAMC,EAAS,WACtC,IAAIC,EAAS,GAEb,cAAeF,GACX,IAAK,YACDA,EAAO,IAAIG,KACX,MAEJ,IAAK,SACDH,EAAO,IAAIG,KAAKH,GAChB,MAEJ,IAAK,SACY,OAATA,IACAA,EAAO,IAAIG,MAEf,MAEJ,QACI,MAAM,IAAIC,MAAM,YAGxB,IAAIC,EAAOL,EAAKM,cACZC,EAAQP,EAAKQ,WAAa,EAC1BC,EAAMT,EAAKU,UACXC,EAAOX,EAAKY,WACZC,EAASb,EAAKc,aACdC,EAASf,EAAKgB,aAyClB,OAvCCX,EAAME,EAAOE,EAAKE,EAAME,EAAQE,GAAU,CAACV,EAAME,EAAOE,EAAKE,EAAME,EAAQE,GAAQE,IAAIC,GAGxFhB,EAASD,EAAOkB,QAAQ,4BAA6BC,IACjD,IAAIlB,EAAS,GACb,OAAQkB,GACJ,IAAK,IACDlB,EAASG,EACT,MAEJ,IAAK,IACDH,EAASK,EAET,MAEJ,IAAK,IACDL,EAASO,EAET,MAEJ,IAAK,IACDP,EAASS,EAET,MAEJ,IAAK,IACDT,EAASW,EAET,MAEJ,IAAK,IACDX,EAASa,EAKjB,OAAOb,KAGJA,GAGEgB,EAAeG,IACxBA,EAAI,GAAKA,GACA,GAAKA,EAAI,IAAMA,E","file":"util.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"util\"] = factory();\n\telse\n\t\troot[\"util\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @description 格式化时间戳\r\n * \r\n * @param {Date|Number} [date] 时间对象或时间戳\r\n * @param {String} [format='Y-M-D'] 目标格式   Y:年  M:月   D:日   h:小时   i:分   s:秒   'Y-M-D'=>'2020-01-01' \r\n * \r\n * @returns {String}\r\n */\r\nexport const formatTime = (date, format = 'Y-M-D') => {\r\n    let result = '';\r\n\r\n    switch (typeof date) {\r\n        case 'undefined':\r\n            date = new Date();\r\n            break;\r\n\r\n        case 'number':\r\n            date = new Date(date);\r\n            break;\r\n\r\n        case 'object':\r\n            if (date === null) {\r\n                date = new Date();\r\n            }\r\n            break;\r\n\r\n        default:\r\n            throw new Error('date类型错误');\r\n    }\r\n\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n\r\n    [year, month, day, hour, minute, second] = [year, month, day, hour, minute, second].map(formatNumber);\r\n\r\n\r\n    result = format.replace(/(Y)|(M)|(D)|(h)|(i)|(s)/g, (match) => {\r\n        let result = '';\r\n        switch (match) {\r\n            case 'Y':\r\n                result = year;\r\n                break;\r\n\r\n            case 'M':\r\n                result = month;\r\n\r\n                break;\r\n\r\n            case 'D':\r\n                result = day;\r\n\r\n                break;\r\n\r\n            case 'h':\r\n                result = hour;\r\n\r\n                break;\r\n\r\n            case 'i':\r\n                result = minute;\r\n\r\n                break;\r\n\r\n            case 's':\r\n                result = second;\r\n\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport const formatNumber = n => {\r\n    n = '' + n;\r\n    return n[1] ? n : '0' + n;\r\n}"],"sourceRoot":""}